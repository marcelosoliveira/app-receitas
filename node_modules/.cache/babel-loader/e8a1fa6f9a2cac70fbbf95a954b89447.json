{"ast":null,"code":"var _jsxFileName = \"/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/components/Ingredient.jsx\";\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport FoodAppContext from '../context/FoodAppContext';\n\nfunction Ingredient() {\n  const {\n    detailRecipe\n  } = useContext(FoodAppContext);\n  const history = useHistory();\n  const {\n    location\n  } = history;\n  const {\n    pathname\n  } = location;\n  const {\n    meals\n  } = detailRecipe;\n  const {\n    drinks\n  } = detailRecipe;\n  const name = pathname.split('/');\n  const details = name === 'comidas' ? meals : drinks;\n  const zero = 0;\n  let ingredients = [];\n  let measures = [];\n\n  if (details) {\n    const keyAndValueArray = Object.entries(details[0]);\n    ingredients = keyAndValueArray.filter(([key, value]) => key.includes('strIngredient') && value !== null && value.length > zero);\n    measures = keyAndValueArray.filter(([key, value]) => key.includes('strMeasure') && value !== null && value.length > zero);\n  }\n\n  console.log(details);\n  console.log(ingredients);\n  console.log(measures);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, ingredients.map(([key, value], index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: key,\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"-\", value, \"-\", measures[index][1])));\n}\n/* Ingredient.propTypes = {\n  name: PropTypes.string.isRequired,\n}; */\n\n\nexport default Ingredient;","map":{"version":3,"sources":["/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/components/Ingredient.jsx"],"names":["React","useContext","useHistory","PropTypes","FoodAppContext","Ingredient","detailRecipe","history","location","pathname","meals","drinks","name","split","details","zero","ingredients","measures","keyAndValueArray","Object","entries","filter","key","value","includes","length","console","log","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,cAAP,MAA2B,2BAA3B;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAmBL,UAAU,CAACG,cAAD,CAAnC;AACA,QAAMG,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAeD,OAArB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeD,QAArB;AAEA,QAAM;AAAEE,IAAAA;AAAF,MAAYJ,YAAlB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAaL,YAAnB;AACA,QAAMM,IAAI,GAAGH,QAAQ,CAACI,KAAT,CAAe,GAAf,CAAb;AAEA,QAAMC,OAAO,GAAGF,IAAI,KAAK,SAAT,GAAqBF,KAArB,GAA6BC,MAA7C;AACA,QAAMI,IAAI,GAAG,CAAb;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAIH,OAAJ,EAAa;AACX,UAAMI,gBAAgB,GAAGC,MAAM,CAACC,OAAP,CAAeN,OAAO,CAAC,CAAD,CAAtB,CAAzB;AACAE,IAAAA,WAAW,GAAGE,gBAAgB,CAACG,MAAjB,CAAwB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KACpCD,GAAG,CAACE,QAAJ,CAAa,eAAb,KAAkCD,KAAK,KAAK,IAAV,IAAkBA,KAAK,CAACE,MAAN,GAAeV,IADvD,CAAd;AAGAE,IAAAA,QAAQ,GAAGC,gBAAgB,CAACG,MAAjB,CAAwB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KACjCD,GAAG,CAACE,QAAJ,CAAa,YAAb,KAA+BD,KAAK,KAAK,IAAV,IAAkBA,KAAK,CAACE,MAAN,GAAeV,IADvD,CAAX;AAGD;;AACDW,EAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,WAAW,CAACY,GAAZ,CAAgB,CAAC,CAACN,GAAD,EAAMC,KAAN,CAAD,EAAeM,KAAf,kBACf;AACE,IAAA,GAAG,EAAGP,GADR;AAEE,mBAAe,GAAEO,KAAM,8BAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKIN,KALJ,OAOIN,QAAQ,CAACY,KAAD,CAAR,CAAgB,CAAhB,CAPJ,CADD,CADH,CADF;AAeD;AAED;AACA;AACA;;;AAEA,eAAexB,UAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport FoodAppContext from '../context/FoodAppContext';\n\nfunction Ingredient() {\n  const { detailRecipe } = useContext(FoodAppContext);\n  const history = useHistory();\n  const { location } = history;\n  const { pathname } = location;\n\n  const { meals } = detailRecipe;\n  const { drinks } = detailRecipe;\n  const name = pathname.split('/');\n\n  const details = name === 'comidas' ? meals : drinks;\n  const zero = 0;\n  let ingredients = [];\n  let measures = [];\n  if (details) {\n    const keyAndValueArray = Object.entries(details[0]);\n    ingredients = keyAndValueArray.filter(([key, value]) => (\n      key.includes('strIngredient') && (value !== null && value.length > zero)\n    ));\n    measures = keyAndValueArray.filter(([key, value]) => (\n      key.includes('strMeasure') && (value !== null && value.length > zero)\n    ));\n  }\n  console.log(details)\n  console.log(ingredients)\n  console.log(measures)\n\n  return (\n    <div>\n      {ingredients.map(([key, value], index) => (\n        <p\n          key={ key }\n          data-testid={ `${index}-ingredient-name-and-measure` }\n        >\n          -\n          { value }\n          -\n          { measures[index][1] }\n        </p>\n      ))}\n    </div>\n  );\n}\n\n/* Ingredient.propTypes = {\n  name: PropTypes.string.isRequired,\n}; */\n\nexport default Ingredient;\n"]},"metadata":{},"sourceType":"module"}