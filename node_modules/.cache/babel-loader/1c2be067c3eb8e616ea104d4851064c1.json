{"ast":null,"code":"const categoryMealUrl = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\nconst categoryDrinkUrl = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n\nconst auxFunc = (term, type, url) => {\n  if (term && type) {\n    if (type === 'i' || type === 'c' || type === 'a') {\n      return `${url}filter.php?${type}=${term}`;\n    }\n\n    if (type === 'f' && term.length > 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    } else if (type === 's') {\n      return `${url}search.php?${type}=${term}`;\n    }\n  }\n\n  return `${url}search.php?s=`;\n};\n\nexport const mealsAPI = async (term, type) => {\n  const mealUrl = 'https://www.themealdb.com/api/json/v1/1/';\n  const URL = auxFunc(term, type, mealUrl);\n\n  try {\n    const response = await fetch(URL);\n    const dataMeal = await response.json();\n    return dataMeal;\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const drinksAPI = async (term, type) => {\n  const drinkUrl = 'https://www.thecocktaildb.com/api/json/v1/1/';\n  const URL = auxFunc(term, type, drinkUrl);\n\n  try {\n    const response = await fetch(URL);\n    const dataDrink = await response.json();\n    return dataDrink;\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const categoryMealApi = async () => {\n  try {\n    const response = await fetch(categoryMealUrl);\n    const categoryMeal = await response.json();\n    return categoryMeal;\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const categoryDrinkApi = async () => {\n  try {\n    const response = await fetch(categoryDrinkUrl);\n    const categoryDrink = await response.json();\n    return categoryDrink;\n  } catch (error) {\n    return error.message;\n  }\n};","map":{"version":3,"sources":["/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/services/index.js"],"names":["categoryMealUrl","categoryDrinkUrl","auxFunc","term","type","url","length","alert","mealsAPI","mealUrl","URL","response","fetch","dataMeal","json","error","message","drinksAPI","drinkUrl","dataDrink","categoryMealApi","categoryMeal","categoryDrinkApi","categoryDrink"],"mappings":"AAAA,MAAMA,eAAe,GAAG,yDAAxB;AACA,MAAMC,gBAAgB,GAAG,6DAAzB;;AAEA,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,GAAb,KAAqB;AACnC,MAAIF,IAAI,IAAIC,IAAZ,EAAkB;AAChB,QAAIA,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,GAAzB,IAAgCA,IAAI,KAAK,GAA7C,EAAkD;AAChD,aAAQ,GAAEC,GAAI,cAAaD,IAAK,IAAGD,IAAK,EAAxC;AACD;;AAAC,QAAIC,IAAI,KAAK,GAAT,IAAgBD,IAAI,CAACG,MAAL,GAAc,CAAlC,EAAqC;AACrCC,MAAAA,KAAK,CAAC,+CAAD,CAAL;AACD,KAFC,MAEK,IAAIH,IAAI,KAAK,GAAb,EAAkB;AACvB,aAAQ,GAAEC,GAAI,cAAaD,IAAK,IAAGD,IAAK,EAAxC;AACD;AACF;;AACD,SAAQ,GAAEE,GAAI,eAAd;AACD,CAXD;;AAaA,OAAO,MAAMG,QAAQ,GAAG,OAAOL,IAAP,EAAaC,IAAb,KAAsB;AAC5C,QAAMK,OAAO,GAAG,0CAAhB;AACA,QAAMC,GAAG,GAAGR,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAaK,OAAb,CAAnB;;AACA,MAAI;AACF,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,WAAOD,QAAP;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CAVM;AAYP,OAAO,MAAMC,SAAS,GAAG,OAAOd,IAAP,EAAaC,IAAb,KAAsB;AAC7C,QAAMc,QAAQ,GAAG,8CAAjB;AACA,QAAMR,GAAG,GAAGR,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAac,QAAb,CAAnB;;AACA,MAAI;AACF,UAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMS,SAAS,GAAG,MAAMR,QAAQ,CAACG,IAAT,EAAxB;AAEA,WAAOK,SAAP;AACD,GALD,CAKE,OAAOJ,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CAXM;AAaP,OAAO,MAAMI,eAAe,GAAG,YAAY;AACzC,MAAI;AACF,UAAMT,QAAQ,GAAG,MAAMC,KAAK,CAACZ,eAAD,CAA5B;AACA,UAAMqB,YAAY,GAAG,MAAMV,QAAQ,CAACG,IAAT,EAA3B;AAEA,WAAOO,YAAP;AACD,GALD,CAKE,OAAON,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CATM;AAWP,OAAO,MAAMM,gBAAgB,GAAG,YAAY;AAC1C,MAAI;AACF,UAAMX,QAAQ,GAAG,MAAMC,KAAK,CAACX,gBAAD,CAA5B;AACA,UAAMsB,aAAa,GAAG,MAAMZ,QAAQ,CAACG,IAAT,EAA5B;AAEA,WAAOS,aAAP;AACD,GALD,CAKE,OAAOR,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CATM","sourcesContent":["const categoryMealUrl = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\nconst categoryDrinkUrl = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n\nconst auxFunc = (term, type, url) => {\n  if (term && type) {\n    if (type === 'i' || type === 'c' || type === 'a') {\n      return `${url}filter.php?${type}=${term}`;\n    } if (type === 'f' && term.length > 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    } else if (type === 's') {\n      return `${url}search.php?${type}=${term}`;\n    }\n  }\n  return `${url}search.php?s=`;\n};\n\nexport const mealsAPI = async (term, type) => {\n  const mealUrl = 'https://www.themealdb.com/api/json/v1/1/';\n  const URL = auxFunc(term, type, mealUrl);\n  try {\n    const response = await fetch(URL);\n    const dataMeal = await response.json();\n    return dataMeal;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const drinksAPI = async (term, type) => {\n  const drinkUrl = 'https://www.thecocktaildb.com/api/json/v1/1/';\n  const URL = auxFunc(term, type, drinkUrl);\n  try {\n    const response = await fetch(URL);\n    const dataDrink = await response.json();\n\n    return dataDrink;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const categoryMealApi = async () => {\n  try {\n    const response = await fetch(categoryMealUrl);\n    const categoryMeal = await response.json();\n\n    return categoryMeal;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const categoryDrinkApi = async () => {\n  try {\n    const response = await fetch(categoryDrinkUrl);\n    const categoryDrink = await response.json();\n\n    return categoryDrink;\n  } catch (error) {\n    return error.message;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}