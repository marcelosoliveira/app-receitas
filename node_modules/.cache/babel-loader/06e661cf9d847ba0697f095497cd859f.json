{"ast":null,"code":"const mealUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\nconst drinkUrl = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst categoryMealUrl = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\nconst categoryDrinkUrl = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list'; // categorias: https://www.themealdb.com/api/json/v1/1/list.php?c=list\n// areas: https://www.themealdb.com/api/json/v1/1/list.php?a=list\n// ingredientes: https://www.themealdb.com/api/json/v1/1/list.php?i=list\n\nconst auxFunc = (term = '', type = '', url) => {\n  if (term && type) {\n    if (type === 'i') {\n      return `${url}filter.php?${type}=${term}`;\n    }\n\n    if (type === 'f' && term.length > 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    } else {\n      return `${url}search.php?${type}=${term}`;\n    }\n  }\n\n  return `${url}search.php?s=`;\n};\n\nexport const mealsAPI = async () => {\n  const URL = auxFunc(\n  /* term='', type='',  */\n  mealUrl);\n\n  try {\n    const response = await fetch(URL);\n    const dataMeal = await response.json();\n    return dataMeal;\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const drinksAPI = async (term, type) => {\n  const URL = auxFunc(term, type, drinkUrl);\n\n  try {\n    const response = await fetch(URL);\n    const dataDrink = await response.json();\n    return dataDrink;\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const categoryMealApi = async () => {\n  try {\n    const response = await fetch(categoryMealUrl);\n    const categoryMeal = await response.json();\n    return categoryMeal;\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const categoryDrinkApi = async () => {\n  try {\n    const response = await fetch(categoryDrinkUrl);\n    const categoryDrink = await response.json();\n    return categoryDrink;\n  } catch (error) {\n    return error.message;\n  }\n};","map":{"version":3,"sources":["/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/services/index.js"],"names":["mealUrl","drinkUrl","categoryMealUrl","categoryDrinkUrl","auxFunc","term","type","url","length","alert","mealsAPI","URL","response","fetch","dataMeal","json","error","message","drinksAPI","dataDrink","categoryMealApi","categoryMeal","categoryDrinkApi","categoryDrink"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uDAAhB;AACA,MAAMC,QAAQ,GAAG,2DAAjB;AACA,MAAMC,eAAe,GAAG,yDAAxB;AACA,MAAMC,gBAAgB,GAAG,6DAAzB,C,CACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,CAACC,IAAI,GAAC,EAAN,EAAUC,IAAI,GAAC,EAAf,EAAmBC,GAAnB,KAA2B;AACzC,MAAIF,IAAI,IAAIC,IAAZ,EAAkB;AAChB,QAAIA,IAAI,KAAK,GAAb,EAAkB;AAChB,aAAQ,GAAEC,GAAI,cAAaD,IAAK,IAAGD,IAAK,EAAxC;AACD;;AAAC,QAAIC,IAAI,KAAK,GAAT,IAAgBD,IAAI,CAACG,MAAL,GAAc,CAAlC,EAAqC;AACrCC,MAAAA,KAAK,CAAC,+CAAD,CAAL;AACD,KAFC,MAEK;AACL,aAAQ,GAAEF,GAAI,cAAaD,IAAK,IAAGD,IAAK,EAAxC;AACD;AACF;;AACD,SAAQ,GAAEE,GAAI,eAAd;AACD,CAXD;;AAaA,OAAO,MAAMG,QAAQ,GAAG,YAAY;AAClC,QAAMC,GAAG,GAAGP,OAAO;AAAC;AAAwBJ,EAAAA,OAAzB,CAAnB;;AACA,MAAI;AACF,UAAMY,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,WAAOD,QAAP;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CATM;AAWP,OAAO,MAAMC,SAAS,GAAG,OAAOb,IAAP,EAAaC,IAAb,KAAsB;AAC7C,QAAMK,GAAG,GAAGP,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAaL,QAAb,CAAnB;;AACA,MAAI;AACF,UAAMW,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMQ,SAAS,GAAG,MAAMP,QAAQ,CAACG,IAAT,EAAxB;AAEA,WAAOI,SAAP;AACD,GALD,CAKE,OAAOH,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CAVM;AAYP,OAAO,MAAMG,eAAe,GAAG,YAAY;AACzC,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMC,KAAK,CAACX,eAAD,CAA5B;AACA,UAAMmB,YAAY,GAAG,MAAMT,QAAQ,CAACG,IAAT,EAA3B;AAEA,WAAOM,YAAP;AACD,GALD,CAKE,OAAOL,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CATM;AAWP,OAAO,MAAMK,gBAAgB,GAAG,YAAY;AAC1C,MAAI;AACF,UAAMV,QAAQ,GAAG,MAAMC,KAAK,CAACV,gBAAD,CAA5B;AACA,UAAMoB,aAAa,GAAG,MAAMX,QAAQ,CAACG,IAAT,EAA5B;AAEA,WAAOQ,aAAP;AACD,GALD,CAKE,OAAOP,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CATM","sourcesContent":["const mealUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\nconst drinkUrl = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst categoryMealUrl = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\nconst categoryDrinkUrl = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n// categorias: https://www.themealdb.com/api/json/v1/1/list.php?c=list\n// areas: https://www.themealdb.com/api/json/v1/1/list.php?a=list\n// ingredientes: https://www.themealdb.com/api/json/v1/1/list.php?i=list\n\nconst auxFunc = (term='', type='', url) => {\n  if (term && type) {\n    if (type === 'i') {\n      return `${url}filter.php?${type}=${term}`;\n    } if (type === 'f' && term.length > 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    } else {\n      return `${url}search.php?${type}=${term}`;\n    }\n  }\n  return `${url}search.php?s=`;\n};\n\nexport const mealsAPI = async () => {\n  const URL = auxFunc(/* term='', type='',  */mealUrl);\n  try {\n    const response = await fetch(URL);\n    const dataMeal = await response.json();\n    return dataMeal;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const drinksAPI = async (term, type) => {\n  const URL = auxFunc(term, type, drinkUrl);\n  try {\n    const response = await fetch(URL);\n    const dataDrink = await response.json();\n\n    return dataDrink;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const categoryMealApi = async () => {\n  try {\n    const response = await fetch(categoryMealUrl);\n    const categoryMeal = await response.json();\n\n    return categoryMeal;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const categoryDrinkApi = async () => {\n  try {\n    const response = await fetch(categoryDrinkUrl);\n    const categoryDrink = await response.json();\n\n    return categoryDrink;\n  } catch (error) {\n    return error.message;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}