{"ast":null,"code":"var _jsxFileName = \"/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/components/MainMeals.jsx\";\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport FoodAppContext from '../context/FoodAppContext';\n\nfunction MainRecipes() {\n  const {\n    mealsData,\n    drinksData,\n    handleClickDetail\n  } = useContext(FoodAppContext);\n  const history = useHistory();\n  const {\n    location\n  } = history;\n  const {\n    pathname\n  } = location;\n  const recipes = pathname.split('/');\n\n  const handleToDetail = id => {\n    handleClickDetail(id, 'comidas');\n    history.push(`/comidas/${id}`);\n  };\n\n  const zero = 0;\n  const doze = 12;\n\n  if (recipes[2] === 'comidas') {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"section-meals\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, mealsData && mealsData.slice(zero, doze).map(({\n      idMeal,\n      strMeal,\n      strMealThumb\n    }, index) => /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: idMeal,\n      className: \"div-meals\",\n      \"data-testid\": `${index}-recipe-card`,\n      onClick: () => handleToDetail(idMeal),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: strMealThumb,\n      alt: \"meals\",\n      \"data-testid\": `${index}-card-img`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-card-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, strMeal)))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-meals\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, drinksData && drinksData.slice(zero, doze).map(({\n    idDrink,\n    strDrink,\n    strDrinkThumb\n  }, index) => /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    key: idDrink,\n    className: \"div-meals\",\n    \"data-testid\": `${index}-recipe-card`,\n    onClick: () => handleToDetail(idDrink),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: strDrinkThumb,\n    alt: \"drinks\",\n    \"data-testid\": `${index}-card-img`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, strDrink)))));\n}\n\nexport default MainRecipes;","map":{"version":3,"sources":["/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/components/MainMeals.jsx"],"names":["React","useContext","useHistory","FoodAppContext","MainRecipes","mealsData","drinksData","handleClickDetail","history","location","pathname","recipes","split","handleToDetail","id","push","zero","doze","slice","map","idMeal","strMeal","strMealThumb","index","idDrink","strDrink","strDrinkThumb"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;;AAEA,SAASC,WAAT,GAAuB;AACrB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,MAA+CN,UAAU,CAACE,cAAD,CAA/D;AACA,QAAMK,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAeD,OAArB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeD,QAArB;AACA,QAAME,OAAO,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAhB;;AAEA,QAAMC,cAAc,GAAIC,EAAD,IAAQ;AAC7BP,IAAAA,iBAAiB,CAACO,EAAD,EAAK,SAAL,CAAjB;AACAN,IAAAA,OAAO,CAACO,IAAR,CAAc,YAAWD,EAAG,EAA5B;AACD,GAHD;;AAKA,QAAME,IAAI,GAAG,CAAb;AACA,QAAMC,IAAI,GAAG,EAAb;;AAEA,MAAIN,OAAO,CAAC,CAAD,CAAP,KAAe,SAAnB,EAA8B;AAC5B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAS,MAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,SAAS,IAAIA,SAAS,CACpBa,KADW,CACLF,IADK,EACCC,IADD,EAEXE,GAFW,CAEP,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA;AAAnB,KAAD,EAAoCC,KAApC,kBACH;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,GAAG,EAAGH,MAFR;AAGE,MAAA,SAAS,EAAC,WAHZ;AAIE,qBAAe,GAAEG,KAAM,cAJzB;AAKE,MAAA,OAAO,EAAG,MAAMV,cAAc,CAACO,MAAD,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AACE,MAAA,GAAG,EAAGE,YADR;AAEE,MAAA,GAAG,EAAC,OAFN;AAGE,qBAAe,GAAEC,KAAM,WAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAYE;AACE,qBAAe,GAAEA,KAAM,YADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGF,OAHH,CAZF,CAHU,CADhB,CADF,CADF;AA4BD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,UAAU,IAAIA,UAAU,CACtBY,KADY,CACNF,IADM,EACAC,IADA,EAEZE,GAFY,CAER,CAAC;AAAEK,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,GAAD,EAAuCH,KAAvC,kBACH;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,GAAG,EAAGC,OAFR;AAGE,IAAA,SAAS,EAAC,WAHZ;AAIE,mBAAe,GAAED,KAAM,cAJzB;AAKE,IAAA,OAAO,EAAG,MAAMV,cAAc,CAACW,OAAD,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,GAAG,EAAGE,aADR;AAEE,IAAA,GAAG,EAAC,QAFN;AAGE,mBAAe,GAAEH,KAAM,WAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAYE;AACE,mBAAe,GAAEA,KAAM,YADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGE,QAHH,CAZF,CAHW,CADjB,CADF,CADF;AA4BD;;AAED,eAAerB,WAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport FoodAppContext from '../context/FoodAppContext';\n\nfunction MainRecipes() {\n  const { mealsData, drinksData, handleClickDetail } = useContext(FoodAppContext);\n  const history = useHistory();\n  const { location } = history;\n  const { pathname } = location;\n  const recipes = pathname.split('/');\n\n  const handleToDetail = (id) => {\n    handleClickDetail(id, 'comidas');\n    history.push(`/comidas/${id}`);\n  };\n\n  const zero = 0;\n  const doze = 12;\n\n  if (recipes[2] === 'comidas') {\n    return (\n      <section>\n        <section className=\"section-meals\">\n          {mealsData && mealsData\n            .slice(zero, doze)\n            .map(({ idMeal, strMeal, strMealThumb }, index) => (\n              <button\n                type=\"button\"\n                key={ idMeal }\n                className=\"div-meals\"\n                data-testid={ `${index}-recipe-card` }\n                onClick={ () => handleToDetail(idMeal) }\n              >\n                <img\n                  src={ strMealThumb }\n                  alt=\"meals\"\n                  data-testid={ `${index}-card-img` }\n                />\n                <p\n                  data-testid={ `${index}-card-name` }\n                >\n                  {strMeal}\n                </p>\n              </button>\n            ))}\n        </section>\n      </section>\n    );\n  }\n  return (\n    <section>\n      <section className=\"section-meals\">\n        {drinksData && drinksData\n          .slice(zero, doze)\n          .map(({ idDrink, strDrink, strDrinkThumb }, index) => (\n            <button\n              type=\"button\"\n              key={ idDrink }\n              className=\"div-meals\"\n              data-testid={ `${index}-recipe-card` }\n              onClick={ () => handleToDetail(idDrink) }\n            >\n              <img\n                src={ strDrinkThumb }\n                alt=\"drinks\"\n                data-testid={ `${index}-card-img` }\n              />\n              <p\n                data-testid={ `${index}-card-name` }\n              >\n                {strDrink}\n              </p>\n            </button>\n          ))}\n      </section>\n    </section>\n  );\n}\n\nexport default MainRecipes;\n"]},"metadata":{},"sourceType":"module"}