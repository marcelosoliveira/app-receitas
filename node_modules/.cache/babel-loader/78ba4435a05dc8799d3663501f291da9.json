{"ast":null,"code":"var _jsxFileName = \"/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/components/Category.jsx\";\nimport React, { useContext, useState } from 'react';\nimport FoodAppContext from '../context/FoodAppContext';\nimport { categoryMealApi, mealsAPI } from '../services';\n\nfunction Category() {\n  const {\n    setMealsData,\n    showSearch\n  } = useContext(FoodAppContext);\n  const [mealsCategory, setMealsCategory] = useState([]);\n  const [toggle, setToggle] = useState(false);\n\n  async function fecthCategory() {\n    const {\n      meals: category\n    } = await categoryMealApi();\n    setMealsCategory(category);\n  }\n\n  useEffect(() => {\n    fecthCategory();\n  }, []);\n  const cinco = 5;\n  const zero = 0;\n  const bools = true;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"All-category-filter\",\n    hidden: showSearch ? bools : false,\n    onClick: async () => {\n      const {\n        meals\n      } = await mealsAPI('', '');\n      setMealsData(meals);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"All\"), mealsCategory && mealsCategory.slice(zero, cinco).map(({\n    strCategory\n  }, index) => /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    key: index,\n    \"data-testid\": `${strCategory}-category-filter`,\n    hidden: showSearch ? bools : false,\n    value: strCategory,\n    onMouseMove: () => setToggle(false),\n    onClick: async ({\n      target\n    }) => {\n      setToggle(false);\n      const term = toggle ? '' : target.value;\n      const {\n        meals\n      } = await mealsAPI(term, 'c');\n      setMealsData(meals);\n      setToggle(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, strCategory)));\n}\n\nexport default Category;","map":{"version":3,"sources":["/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/components/Category.jsx"],"names":["React","useContext","useState","FoodAppContext","categoryMealApi","mealsAPI","Category","setMealsData","showSearch","mealsCategory","setMealsCategory","toggle","setToggle","fecthCategory","meals","category","useEffect","cinco","zero","bools","slice","map","strCategory","index","target","term","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,aAA1C;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA;AAFI,MAGFP,UAAU,CAACE,cAAD,CAHd;AAIA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;;AAEA,iBAAeW,aAAf,GAA+B;AAC7B,UAAM;AAAEC,MAAAA,KAAK,EAAEC;AAAT,QAAsB,MAAMX,eAAe,EAAjD;AACAM,IAAAA,gBAAgB,CAACK,QAAD,CAAhB;AACD;;AAEDC,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMI,KAAK,GAAG,CAAd;AACA,QAAMC,IAAI,GAAG,CAAb;AACA,QAAMC,KAAK,GAAG,IAAd;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,qBAFd;AAGE,IAAA,MAAM,EAAGX,UAAU,GAAGW,KAAH,GAAW,KAHhC;AAIE,IAAA,OAAO,EAAG,YAAY;AACpB,YAAM;AAAEL,QAAAA;AAAF,UAAY,MAAMT,QAAQ,CAAC,EAAD,EAAK,EAAL,CAAhC;AACAE,MAAAA,YAAY,CAACO,KAAD,CAAZ;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAYGL,aAAa,IAAIA,aAAa,CAC5BW,KADe,CACTF,IADS,EACHD,KADG,EAEfI,GAFe,CAEX,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAkBC,KAAlB,kBACH;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,GAAG,EAAGA,KAFR;AAGE,mBAAe,GAAED,WAAY,kBAH/B;AAIE,IAAA,MAAM,EAAGd,UAAU,GAAGW,KAAH,GAAW,KAJhC;AAKE,IAAA,KAAK,EAAGG,WALV;AAME,IAAA,WAAW,EAAG,MAAMV,SAAS,CAAC,KAAD,CAN/B;AAOE,IAAA,OAAO,EAAG,OAAO;AAAEY,MAAAA;AAAF,KAAP,KAAsB;AAC9BZ,MAAAA,SAAS,CAAC,KAAD,CAAT;AACA,YAAMa,IAAI,GAAGd,MAAM,GAAG,EAAH,GAAQa,MAAM,CAACE,KAAlC;AACA,YAAM;AAAEZ,QAAAA;AAAF,UAAY,MAAMT,QAAQ,CAACoB,IAAD,EAAO,GAAP,CAAhC;AACAlB,MAAAA,YAAY,CAACO,KAAD,CAAZ;AACAF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeIU,WAfJ,CAHc,CAZpB,CADF;AAoCD;;AAED,eAAehB,QAAf","sourcesContent":["import React, { useContext, useState } from 'react';\n\nimport FoodAppContext from '../context/FoodAppContext';\nimport { categoryMealApi, mealsAPI } from '../services';\n\nfunction Category() {\n  const {\n    setMealsData,\n    showSearch,\n  } = useContext(FoodAppContext);\n  const [mealsCategory, setMealsCategory] = useState([]);\n  const [toggle, setToggle] = useState(false);\n\n  async function fecthCategory() {\n    const { meals: category } = await categoryMealApi();\n    setMealsCategory(category);\n  }\n\n  useEffect(() => {\n    fecthCategory();\n  }, []);\n\n  const cinco = 5;\n  const zero = 0;\n  const bools = true;\n\n  return (\n    <div className=\"div-category\">\n      <button\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        hidden={ showSearch ? bools : false }\n        onClick={ async () => {\n          const { meals } = await mealsAPI('', '');\n          setMealsData(meals);\n        } }\n      >\n        All\n      </button>\n      {mealsCategory && mealsCategory\n        .slice(zero, cinco)\n        .map(({ strCategory }, index) => (\n          <button\n            type=\"button\"\n            key={ index }\n            data-testid={ `${strCategory}-category-filter` }\n            hidden={ showSearch ? bools : false }\n            value={ strCategory }\n            onMouseMove={ () => setToggle(false) }\n            onClick={ async ({ target }) => {\n              setToggle(false);\n              const term = toggle ? '' : target.value;\n              const { meals } = await mealsAPI(term, 'c');\n              setMealsData(meals);\n              setToggle(true);\n            } }\n          >\n            { strCategory}\n          </button>\n        ))}\n    </div>\n  );\n}\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}