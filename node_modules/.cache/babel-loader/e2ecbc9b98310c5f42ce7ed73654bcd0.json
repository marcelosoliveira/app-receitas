{"ast":null,"code":"var _jsxFileName = \"/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/components/Recomendations.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { mealsAPI, drinksAPI } from '../services';\nimport FoodAppContext from '../context/FoodAppContext';\nimport useRecipes from '../hooks/useRecipes';\n\nfunction Recomendations({\n  recipes\n}) {\n  const {\n    mealsData,\n    setMealsData,\n    drinksData,\n    setDrinksData\n  } = useContext(FoodAppContext);\n  const history = useHistory();\n  const [handleToDetail,,\n  /* recipes */\n  zero\n  /* doze */\n  ] = useRecipes(history);\n  const six = 6;\n\n  const fetchMealsRecipes = async () => {\n    const {\n      meals\n    } = await mealsAPI('', '');\n    setMealsData(meals);\n  };\n\n  const fetchDrinksRecipes = async () => {\n    const {\n      drinks\n    } = await drinksAPI('', '');\n    setDrinksData(drinks);\n  };\n\n  const fetchRecipes = recipes === 'comidas' ? fetchMealsRecipes : fetchDrinksRecipes;\n  useEffect(() => {\n    fetchRecipes();\n  }, []);\n\n  if (recipes !== 'comidas') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Recomendations\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-recomendations\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, mealsData && mealsData.slice(zero, six).map(({\n      idMeal,\n      strMeal,\n      strCategory,\n      strMealThumb\n    }) => /*#__PURE__*/React.createElement(\"button\", {\n      key: idMeal,\n      type: \"button\",\n      className: \"div-meals\",\n      onClick: () => handleToDetail(idMeal),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: strMealThumb,\n      alt: \"recipes-meals\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, strCategory), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, strMeal)))));\n  }\n}\n\nRecomendations.propTypes = {\n  recipes: PropTypes.string.isRequired\n};\nexport default Recomendations;","map":{"version":3,"sources":["/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/components/Recomendations.jsx"],"names":["React","useContext","useEffect","PropTypes","useHistory","mealsAPI","drinksAPI","FoodAppContext","useRecipes","Recomendations","recipes","mealsData","setMealsData","drinksData","setDrinksData","history","handleToDetail","zero","six","fetchMealsRecipes","meals","fetchDrinksRecipes","drinks","fetchRecipes","slice","map","idMeal","strMeal","strCategory","strMealThumb","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAqC;AACnC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AACJC,IAAAA,UADI;AACQC,IAAAA;AADR,MAC0Bb,UAAU,CAACM,cAAD,CAD1C;AAGA,QAAMQ,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAM,CAACY,cAAD;AAAiB;AAAeC,EAAAA;AAAM;AAAtC,MAAoDT,UAAU,CAACO,OAAD,CAApE;AACA,QAAMG,GAAG,GAAG,CAAZ;;AACA,QAAMC,iBAAiB,GAAG,YAAY;AACpC,UAAM;AAAEC,MAAAA;AAAF,QAAY,MAAMf,QAAQ,CAAC,EAAD,EAAK,EAAL,CAAhC;AACAO,IAAAA,YAAY,CAACQ,KAAD,CAAZ;AACD,GAHD;;AAKA,QAAMC,kBAAkB,GAAG,YAAY;AACrC,UAAM;AAAEC,MAAAA;AAAF,QAAa,MAAMhB,SAAS,CAAC,EAAD,EAAK,EAAL,CAAlC;AACAQ,IAAAA,aAAa,CAACQ,MAAD,CAAb;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAGb,OAAO,KAAK,SAAZ,GAAwBS,iBAAxB,GACjBE,kBADJ;AAGAnB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIb,OAAO,KAAK,SAAhB,EAA2B;AACzB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,SAAS,IAAIA,SAAS,CAACa,KAAV,CAAgBP,IAAhB,EAAsBC,GAAtB,EAA2BO,GAA3B,CACZ,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA,WAAnB;AAAgCC,MAAAA;AAAhC,KAAD,kBACE;AACE,MAAA,GAAG,EAAGH,MADR;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAC,WAHZ;AAIE,MAAA,OAAO,EAAG,MAAMV,cAAc,CAACU,MAAD,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAK,MAAA,GAAG,EAAGG,YAAX;AAA0B,MAAA,GAAG,EAAC,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,WAAL,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,OAAN,CARF,CAFU,CADhB,CAFF,CADF;AAoBD;AACF;;AAEDlB,cAAc,CAACqB,SAAf,GAA2B;AACzBpB,EAAAA,OAAO,EAAEP,SAAS,CAAC4B,MAAV,CAAiBC;AADD,CAA3B;AAIA,eAAevB,cAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport { mealsAPI, drinksAPI } from '../services';\nimport FoodAppContext from '../context/FoodAppContext';\nimport useRecipes from '../hooks/useRecipes';\n\nfunction Recomendations({ recipes }) {\n  const { mealsData, setMealsData,\n    drinksData, setDrinksData } = useContext(FoodAppContext);\n\n  const history = useHistory();\n  const [handleToDetail, /* recipes */, zero, /* doze */] = useRecipes(history);\n  const six = 6;\n  const fetchMealsRecipes = async () => {\n    const { meals } = await mealsAPI('', '');\n    setMealsData(meals);\n  };\n\n  const fetchDrinksRecipes = async () => {\n    const { drinks } = await drinksAPI('', '');\n    setDrinksData(drinks);\n  };\n\n  const fetchRecipes = recipes === 'comidas' ? fetchMealsRecipes\n    : fetchDrinksRecipes;\n\n  useEffect(() => {\n    fetchRecipes();\n  }, []);\n\n  if (recipes !== 'comidas') {\n    return (\n      <div>\n        <h3>Recomendations</h3>\n        <div className=\"div-recomendations\">\n          {mealsData && mealsData.slice(zero, six).map(\n            ({ idMeal, strMeal, strCategory, strMealThumb }) => (\n              <button\n                key={ idMeal }\n                type=\"button\"\n                className=\"div-meals\"\n                onClick={ () => handleToDetail(idMeal) }\n              >\n                <img src={ strMealThumb } alt=\"recipes-meals\" />\n                <p>{ strCategory }</p>\n                <h4>{ strMeal }</h4>\n              </button>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nRecomendations.propTypes = {\n  recipes: PropTypes.string.isRequired,\n};\n\nexport default Recomendations;\n"]},"metadata":{},"sourceType":"module"}