{"ast":null,"code":"var _jsxFileName = \"/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/components/Ingredient.jsx\";\nimport React, { useContext } from 'react';\nimport FoodAppContext from '../context/FoodAppContext';\n\nfunction Ingredient() {\n  const {\n    detailRecipe\n  } = useContext(FoodAppContext);\n  const {\n    meals\n  } = detailRecipe;\n  let ingredients = [];\n  let measures = [];\n\n  if (meals) {\n    const keyAndValueArray = Object.entries(meals[0]);\n    ingredients = keyAndValueArray.filter(([key, value]) => key.includes('strIngredient') && value !== null && value.length > 0);\n    measures = keyAndValueArray.filter(([key, value]) => key.includes('strMeasure') && value !== null && value.length > 1);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, ingredients.map(([key, value], index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: key,\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"-\", value, \"-\", measures[index][1])));\n}\n\nexport default Ingredient;","map":{"version":3,"sources":["/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/components/Ingredient.jsx"],"names":["React","useContext","FoodAppContext","Ingredient","detailRecipe","meals","ingredients","measures","keyAndValueArray","Object","entries","filter","key","value","includes","length","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,cAAP,MAA2B,2BAA3B;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAmBH,UAAU,CAACC,cAAD,CAAnC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAYD,YAAlB;AAEA,MAAIE,WAAW,GAAG,EAAlB;AACA,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAIF,KAAJ,EAAW;AACT,UAAMG,gBAAgB,GAAGC,MAAM,CAACC,OAAP,CAAeL,KAAK,CAAC,CAAD,CAApB,CAAzB;AACAC,IAAAA,WAAW,GAAGE,gBAAgB,CAACG,MAAjB,CAAwB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KACpCD,GAAG,CAACE,QAAJ,CAAa,eAAb,KAAkCD,KAAK,KAAK,IAAV,IAAkBA,KAAK,CAACE,MAAN,GAAe,CADvD,CAAd;AAGAR,IAAAA,QAAQ,GAAGC,gBAAgB,CAACG,MAAjB,CAAwB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KACjCD,GAAG,CAACE,QAAJ,CAAa,YAAb,KAA+BD,KAAK,KAAK,IAAV,IAAkBA,KAAK,CAACE,MAAN,GAAe,CADvD,CAAX;AAGD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,WAAW,CAACU,GAAZ,CAAgB,CAAC,CAACJ,GAAD,EAAMC,KAAN,CAAD,EAAeI,KAAf,kBACf;AACE,IAAA,GAAG,EAAGL,GADR;AAEE,mBAAe,GAAEK,KAAM,8BAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKIJ,KALJ,OAOIN,QAAQ,CAACU,KAAD,CAAR,CAAgB,CAAhB,CAPJ,CADD,CADH,CADF;AAeD;;AAED,eAAed,UAAf","sourcesContent":["import React, { useContext } from 'react';\n\nimport FoodAppContext from '../context/FoodAppContext';\n\nfunction Ingredient() {\n  const { detailRecipe } = useContext(FoodAppContext);\n  const { meals } = detailRecipe;\n\n  let ingredients = [];\n  let measures = [];\n  if (meals) {\n    const keyAndValueArray = Object.entries(meals[0]);\n    ingredients = keyAndValueArray.filter(([key, value]) => (\n      key.includes('strIngredient') && (value !== null && value.length > 0)\n    ));\n    measures = keyAndValueArray.filter(([key, value]) => (\n      key.includes('strMeasure') && (value !== null && value.length > 1)\n    ));\n  }\n\n  return (\n    <div>\n      {ingredients.map(([key, value], index) => (\n        <p\n          key={ key }\n          data-testid={ `${index}-ingredient-name-and-measure` }\n        >\n          -\n          { value }\n          -\n          { measures[index][1] }\n        </p>\n      ))}\n    </div>\n  );\n}\n\nexport default Ingredient;\n"]},"metadata":{},"sourceType":"module"}