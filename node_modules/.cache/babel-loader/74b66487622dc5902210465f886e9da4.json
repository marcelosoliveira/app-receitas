{"ast":null,"code":"var _jsxFileName = \"/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/context/Provider.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodAppContext from './FoodAppContext';\nimport { mealsAPI, drinksAPI, categoryMealApi, categoryDrinkApi } from '../services';\n\nfunction Provider({\n  children\n}) {\n  const [mealsData, setMealsData] = useState([]);\n  const [drinksData, setDrinksData] = useState([]);\n  const [fields, setFields] = useState({\n    term: '',\n    type: ''\n  });\n\n  const getMealsDrinks = async () => {\n    const {\n      meals\n    } = await mealsAPI(_, _);\n    const {\n      drinks\n    } = await drinksAPI(_, _);\n    /*     const { meals: categoryMeal } = await categoryMealApi();\n        const { drinks: categoryDrink } = await categoryDrinkApi(); */\n\n    setMealsData(meals);\n    setDrinksData(drinks);\n    /*     setMealsCategory(categoryMeal);\n        setDrinksCategory(categoryDrink); */\n  };\n\n  const [showSearch, setShowSearch] = useState(false);\n\n  const handlerChange = ({\n    target\n  }) => {\n    const {\n      name,\n      value\n    } = target;\n    setFields({ ...fields,\n      [name]: value\n    });\n  };\n\n  const handlerClick = async ({\n    target\n  }) => {\n    const {\n      value\n    } = target;\n    const {\n      term,\n      type\n    } = fields;\n\n    if (value === 'Comidas') {\n      const {\n        meals\n      } = await mealsAPI(term, type);\n      setMealsData(meals);\n    } else {\n      const {\n        drinks\n      } = await drinksAPI(term, type);\n      setDrinksData(drinks);\n    }\n  };\n\n  useEffect(() => {\n    getMealsDrinks();\n  }, []);\n  console.log(mealsData);\n  const context = {\n    fields,\n    drinksData,\n    mealsData,\n    setMealsData,\n    setDrinksData,\n    showSearch,\n    setShowSearch,\n    handlerChange,\n    handlerClick\n  };\n  return /*#__PURE__*/React.createElement(FoodAppContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nProvider.propTypes = {\n  children: PropTypes.shape({})\n};\nProvider.defaultProps = {\n  children: {}\n};\nexport default Provider;","map":{"version":3,"sources":["/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/context/Provider.js"],"names":["React","useEffect","useState","PropTypes","FoodAppContext","mealsAPI","drinksAPI","categoryMealApi","categoryDrinkApi","Provider","children","mealsData","setMealsData","drinksData","setDrinksData","fields","setFields","term","type","getMealsDrinks","meals","_","drinks","showSearch","setShowSearch","handlerChange","target","name","value","handlerClick","console","log","context","propTypes","shape","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodAppContext from './FoodAppContext';\nimport { mealsAPI, drinksAPI, categoryMealApi, categoryDrinkApi } from '../services';\n\nfunction Provider({ children }) {\n  const [mealsData, setMealsData] = useState([]);\n  const [drinksData, setDrinksData] = useState([]);\n\n  const [fields, setFields] = useState({ term: '', type: '' });\n\n  const getMealsDrinks = async () => {\n    const { meals } = await mealsAPI(_, _);\n    const { drinks } = await drinksAPI(_, _);\n/*     const { meals: categoryMeal } = await categoryMealApi();\n    const { drinks: categoryDrink } = await categoryDrinkApi(); */\n    setMealsData(meals);\n    setDrinksData(drinks);\n/*     setMealsCategory(categoryMeal);\n    setDrinksCategory(categoryDrink); */\n  };\n\n  const [showSearch, setShowSearch] = useState(false);\n\n  const handlerChange = ({ target }) => {\n    const { name, value } = target;\n    setFields({\n      ...fields,\n      [name]: value,\n    });\n  };\n\n  const handlerClick = async ({ target }) => {\n    const { value } = target;\n    const { term, type } = fields;\n    if (value === 'Comidas') {\n      const { meals } = await mealsAPI(term, type);\n      setMealsData(meals);\n    } else {\n      const { drinks } = await drinksAPI(term, type);\n      setDrinksData(drinks);\n    }\n  };\n\n  useEffect(() => {\n    getMealsDrinks();\n  }, []);\n\n  console.log(mealsData)\n\n  const context = {\n    fields,\n    drinksData,\n    mealsData,\n    setMealsData,\n    setDrinksData,\n    showSearch,\n    setShowSearch,\n    handlerChange,\n    handlerClick,\n  };\n\n  return (\n    <FoodAppContext.Provider value={ context }>\n      { children }\n    </FoodAppContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.shape({}),\n};\n\nProvider.defaultProps = {\n  children: {},\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}