{"ast":null,"code":"var _jsxFileName = \"/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/context/Provider.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodAppContext from './FoodAppContext';\nimport { mealsAPI, drinksAPI, categoryMealApi, categoryDrinkApi } from '../services';\n\nfunction Provider({\n  children\n}) {\n  const [mealsData, setMealsData] = useState([]);\n  const [drinksData, setDrinksData] = useState([]);\n  const [mealsCategory, setMealsCategory] = useState([]);\n  const [drinksCategory, setDrinksCategory] = useState([]);\n\n  const getMealsDrinks = async () => {\n    const {\n      meals\n    } = await mealsAPI();\n    const {\n      drinks\n    } = await drinksAPI();\n    const {\n      meals: categoryMeal\n    } = await categoryMealApi();\n    const {\n      drinks: categoryDrink\n    } = await categoryDrinkApi();\n    setMealsData(meals);\n    setDrinksData(drinks);\n    setMealsCategory(categoryMeal);\n    setDrinksCategory(categoryDrink);\n  };\n\n  const [showSearch, setShowSearch] = useState(false);\n  useEffect(() => {\n    getMealsDrinks();\n  }, []);\n  const context = {\n    mealsData,\n    setMealsData,\n    setDrinksData,\n    drinksData,\n    mealsCategory,\n    drinksCategory,\n    showSearch,\n    setShowSearch\n  };\n  return /*#__PURE__*/React.createElement(FoodAppContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nProvider.propTypes = {\n  children: PropTypes.shape({})\n};\nProvider.defaultProps = {\n  children: {}\n};\nexport default Provider;","map":{"version":3,"sources":["/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/context/Provider.js"],"names":["React","useEffect","useState","PropTypes","FoodAppContext","mealsAPI","drinksAPI","categoryMealApi","categoryDrinkApi","Provider","children","mealsData","setMealsData","drinksData","setDrinksData","mealsCategory","setMealsCategory","drinksCategory","setDrinksCategory","getMealsDrinks","meals","drinks","categoryMeal","categoryDrink","showSearch","setShowSearch","context","propTypes","shape","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,eAA9B,EAA+CC,gBAA/C,QAAuE,aAAvE;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,EAAD,CAApD;;AACA,QAAMiB,cAAc,GAAG,YAAY;AACjC,UAAM;AAAEC,MAAAA;AAAF,QAAY,MAAMf,QAAQ,EAAhC;AACA,UAAM;AAAEgB,MAAAA;AAAF,QAAa,MAAMf,SAAS,EAAlC;AACA,UAAM;AAAEc,MAAAA,KAAK,EAAEE;AAAT,QAA0B,MAAMf,eAAe,EAArD;AACA,UAAM;AAAEc,MAAAA,MAAM,EAAEE;AAAV,QAA4B,MAAMf,gBAAgB,EAAxD;AACAI,IAAAA,YAAY,CAACQ,KAAD,CAAZ;AACAN,IAAAA,aAAa,CAACO,MAAD,CAAb;AACAL,IAAAA,gBAAgB,CAACM,YAAD,CAAhB;AACAJ,IAAAA,iBAAiB,CAACK,aAAD,CAAjB;AACD,GATD;;AAWA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMO,OAAO,GAAG;AACdf,IAAAA,SADc;AAEdC,IAAAA,YAFc;AAGdE,IAAAA,aAHc;AAIdD,IAAAA,UAJc;AAKdE,IAAAA,aALc;AAMdE,IAAAA,cANc;AAOdO,IAAAA,UAPc;AAQdC,IAAAA;AARc,GAAhB;AAWA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIhB,QADJ,CADF;AAKD;;AAEDD,QAAQ,CAACkB,SAAT,GAAqB;AACnBjB,EAAAA,QAAQ,EAAEP,SAAS,CAACyB,KAAV,CAAgB,EAAhB;AADS,CAArB;AAIAnB,QAAQ,CAACoB,YAAT,GAAwB;AACtBnB,EAAAA,QAAQ,EAAE;AADY,CAAxB;AAIA,eAAeD,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodAppContext from './FoodAppContext';\nimport { mealsAPI, drinksAPI, categoryMealApi, categoryDrinkApi } from '../services';\n\nfunction Provider({ children }) {\n  const [mealsData, setMealsData] = useState([]);\n  const [drinksData, setDrinksData] = useState([]);\n  const [mealsCategory, setMealsCategory] = useState([]);\n  const [drinksCategory, setDrinksCategory] = useState([]);\n  const getMealsDrinks = async () => {\n    const { meals } = await mealsAPI();\n    const { drinks } = await drinksAPI();\n    const { meals: categoryMeal } = await categoryMealApi();\n    const { drinks: categoryDrink } = await categoryDrinkApi();\n    setMealsData(meals);\n    setDrinksData(drinks);\n    setMealsCategory(categoryMeal);\n    setDrinksCategory(categoryDrink);\n  };\n\n  const [showSearch, setShowSearch] = useState(false);\n\n  useEffect(() => {\n    getMealsDrinks();\n  }, []);\n\n  const context = {\n    mealsData,\n    setMealsData,\n    setDrinksData,\n    drinksData,\n    mealsCategory,\n    drinksCategory,\n    showSearch,\n    setShowSearch,\n  };\n\n  return (\n    <FoodAppContext.Provider value={ context }>\n      { children }\n    </FoodAppContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.shape({}),\n};\n\nProvider.defaultProps = {\n  children: {},\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}