{"ast":null,"code":"var _jsxFileName = \"/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/context/Provider.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodAppContext from './FoodAppContext';\nimport { mealsAPI, drinksAPI } from '../services';\n\nfunction Provider({\n  children,\n  history\n}, props) {\n  const [mealsData, setMealsData] = useState([]);\n  const [drinksData, setDrinksData] = useState([]);\n  const [renderize, setRenderize] = useState(false);\n  const [fields, setFields] = useState({\n    term: '',\n    type: ''\n  });\n\n  const getMealsDrinks = async () => {\n    const {\n      meals\n    } = await mealsAPI(fields.term, fields.type);\n    const {\n      drinks\n    } = await drinksAPI(fields.term, fields.type);\n    setMealsData(meals);\n    setDrinksData(drinks);\n  };\n\n  const [showSearch, setShowSearch] = useState(false);\n\n  const handlerChange = ({\n    target\n  }) => {\n    const {\n      name,\n      value\n    } = target;\n    setFields({ ...fields,\n      [name]: value\n    });\n  };\n\n  console.log(history);\n\n  const handlerData = async (recipes, id) => {\n    if (!recipes) {\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n      setRenderize(false);\n    } else if (recipes.length > 1) {\n      setRenderize(true);\n    } else {\n      const {\n        location\n      } = history;\n      const {\n        pathname\n      } = location;\n      history.push(`${pathname}/${recipes[0][id]}`);\n    }\n  };\n\n  const handlerClick = async ({\n    target\n  }) => {\n    const {\n      value\n    } = target;\n    const {\n      term,\n      type\n    } = fields;\n\n    if (value === 'Comidas') {\n      const {\n        meals\n      } = await mealsAPI(term, type);\n      setMealsData(meals);\n      handlerData(meals, 'idMeal');\n    } else {\n      const {\n        drinks\n      } = await drinksAPI(term, type);\n      setDrinksData(drinks);\n      handlerData(drinks, 'idDrink');\n    }\n  };\n\n  useEffect(() => {\n    getMealsDrinks();\n  }, []);\n  const context = {\n    renderize,\n    fields,\n    drinksData,\n    mealsData,\n    setMealsData,\n    setDrinksData,\n    showSearch,\n    setShowSearch,\n    handlerChange,\n    handlerClick,\n    handlerData\n  };\n  return /*#__PURE__*/React.createElement(FoodAppContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nProvider.propTypes = {\n  children: PropTypes.shape({})\n};\nProvider.defaultProps = {\n  children: {}\n};\nexport default Provider;","map":{"version":3,"sources":["/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/context/Provider.js"],"names":["React","useEffect","useState","PropTypes","FoodAppContext","mealsAPI","drinksAPI","Provider","children","history","props","mealsData","setMealsData","drinksData","setDrinksData","renderize","setRenderize","fields","setFields","term","type","getMealsDrinks","meals","drinks","showSearch","setShowSearch","handlerChange","target","name","value","console","log","handlerData","recipes","id","alert","length","location","pathname","push","handlerClick","context","propTypes","shape","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FoodAppContext from './FoodAppContext';\nimport { mealsAPI, drinksAPI } from '../services';\n\nfunction Provider({ children, history }, props) {\n  const [mealsData, setMealsData] = useState([]);\n  const [drinksData, setDrinksData] = useState([]);\n  const [renderize, setRenderize] = useState(false);\n  const [fields, setFields] = useState({ term: '', type: '' });\n\n  const getMealsDrinks = async () => {\n    const { meals } = await mealsAPI(fields.term, fields.type);\n    const { drinks } = await drinksAPI(fields.term, fields.type);\n    setMealsData(meals);\n    setDrinksData(drinks);\n  };\n\n  const [showSearch, setShowSearch] = useState(false);\n\n  const handlerChange = ({ target }) => {\n    const { name, value } = target;\n    setFields({\n      ...fields,\n      [name]: value,\n    });\n  };\n  console.log(history);\n\n  const handlerData = async (recipes, id) => {\n    if (!recipes) {\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n      setRenderize(false);\n    } else if (recipes.length > 1) {\n      setRenderize(true);\n    } else {\n      const { location } = history;\n      const { pathname } = location;\n      history.push(`${pathname}/${recipes[0][id]}`);\n    }\n  };\n\n  const handlerClick = async ({ target }) => {\n    const { value } = target;\n    const { term, type } = fields;\n    if (value === 'Comidas') {\n      const { meals } = await mealsAPI(term, type);\n      setMealsData(meals);\n      handlerData(meals, 'idMeal');\n    } else {\n      const { drinks } = await drinksAPI(term, type);\n      setDrinksData(drinks);\n      handlerData(drinks, 'idDrink');\n    }\n  };\n\n  useEffect(() => {\n    getMealsDrinks();\n  }, []);\n\n  const context = {\n    renderize,\n    fields,\n    drinksData,\n    mealsData,\n    setMealsData,\n    setDrinksData,\n    showSearch,\n    setShowSearch,\n    handlerChange,\n    handlerClick,\n    handlerData,\n  };\n\n  return (\n    <FoodAppContext.Provider value={ context }>\n      { children}\n    </FoodAppContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.shape({}),\n};\n\nProvider.defaultProps = {\n  children: {},\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}