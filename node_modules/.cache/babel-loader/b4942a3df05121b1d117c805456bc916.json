{"ast":null,"code":"var _jsxFileName = \"/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/context/Provider.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodAppContext from './FoodAppContext';\nimport { mealsAPI, drinksAPI } from '../services';\n\nfunction Provider({\n  children\n}) {\n  const [mealsData, setMealsData] = useState([]);\n  const [drinksData, setDrinksData] = useState([]);\n\n  const getMealsDrinks = async () => {\n    const {\n      meals\n    } = await mealsAPI();\n    const {\n      drinks\n    } = await drinksAPI();\n    setMealsData(meals);\n    setDrinksData(drinks);\n  };\n\n  useEffect(() => {\n    getMealsDrinks();\n  }, []);\n\n  const getFilterEmail = (email, password) => {\n    const number = 6;\n\n    if (email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/) && password.length > number) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n    route: false\n  });\n\n  const handlerChangeLogin = ({\n    target\n  }) => {\n    const {\n      name,\n      value\n    } = target;\n    const emailPass = { ...user\n    };\n    emailPass[name] = value;\n    setUser(emailPass);\n  };\n\n  const handlerClickLogin = () => {\n    setUser({ ...user,\n      route: true\n    });\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({\n      email: user.email\n    }));\n  };\n\n  const {\n    email,\n    password,\n    route\n  } = user;\n  const context = {\n    mealsData,\n    drinksData,\n    email,\n    password,\n    route,\n    getFilterEmail,\n    handlerChangeLogin,\n    handlerClickLogin\n  };\n  return /*#__PURE__*/React.createElement(FoodAppContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nProvider.propTypes = {\n  children: PropTypes.shape({})\n};\nProvider.defaultProps = {\n  children: {}\n};\nexport default Provider;","map":{"version":3,"sources":["/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/context/Provider.js"],"names":["React","useEffect","useState","PropTypes","FoodAppContext","mealsAPI","drinksAPI","Provider","children","mealsData","setMealsData","drinksData","setDrinksData","getMealsDrinks","meals","drinks","getFilterEmail","email","password","number","match","length","user","setUser","route","handlerChangeLogin","target","name","value","emailPass","handlerClickLogin","localStorage","setItem","JSON","stringify","context","propTypes","shape","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodAppContext from './FoodAppContext';\nimport { mealsAPI, drinksAPI } from '../services';\n\nfunction Provider({ children }) {\n  const [mealsData, setMealsData] = useState([]);\n  const [drinksData, setDrinksData] = useState([]);\n  const getMealsDrinks = async () => {\n    const { meals } = await mealsAPI();\n    const { drinks } = await drinksAPI();\n    setMealsData(meals);\n    setDrinksData(drinks);\n  };\n\n  useEffect(() => {\n    getMealsDrinks();\n  }, []);\n\n  const getFilterEmail = (email, password) => {\n    const number = 6;\n    if (email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/) && password.length > number) {\n      return false;\n    }\n    return true;\n  };\n\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n    route: false,\n  });\n\n  const handlerChangeLogin = ({ target }) => {\n    const { name, value } = target;\n    const emailPass = { ...user };\n    emailPass[name] = value;\n    setUser(emailPass);\n  };\n\n  const handlerClickLogin = () => {\n    setUser({ ...user, route: true });\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({ email: user.email }));\n  };\n\n  const { email, password, route } = user;\n\n  const context = {\n    mealsData,\n    drinksData,\n    email,\n    password,\n    route,\n    getFilterEmail,\n    handlerChangeLogin,\n    handlerClickLogin,\n  };\n\n  return (\n    <FoodAppContext.Provider value={ context }>\n      { children }\n    </FoodAppContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.shape({}),\n};\n\nProvider.defaultProps = {\n  children: {},\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}