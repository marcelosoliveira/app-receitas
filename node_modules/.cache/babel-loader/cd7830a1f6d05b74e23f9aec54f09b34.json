{"ast":null,"code":"var _jsxFileName = \"/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/components/Category.jsx\";\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { mealsAPI, drinksAPI } from '../services';\n\nfunction Category() {\n  const history = useHistory();\n  useEffect(() => {\n    fetchCategory();\n  }, []);\n\n  if (category[1] === 'comidas') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"All-category-filter\",\n      hidden: showSearch ? bools : false,\n      onClick: async () => {\n        const {\n          meals\n        } = await mealsAPI('', '');\n        setMealsData(meals);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"All\"), mealsCategory && mealsCategory.slice(zero, cinco).map(({\n      strCategory\n    }, index) => /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: index,\n      \"data-testid\": `${strCategory}-category-filter`,\n      hidden: showSearch ? bools : false,\n      value: strCategory,\n      onMouseMove: () => setToggle(false),\n      onClick: async ({\n        target\n      }) => {\n        setToggle(false);\n        const term = toggle ? '' : target.value;\n        const {\n          meals\n        } = await mealsAPI(term, 'c');\n        setMealsData(meals);\n        setToggle(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, strCategory)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"All-category-filter\",\n    hidden: showSearch ? bools : false,\n    onClick: async () => {\n      const {\n        drinks\n      } = await drinksAPI('', '');\n      setDrinksData(drinks);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"All\"), drinksCategory && drinksCategory.slice(zero, cinco).map(({\n    strCategory\n  }, index) => /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    key: index,\n    \"data-testid\": `${strCategory}-category-filter`,\n    hidden: showSearch ? bools : false,\n    value: strCategory,\n    onMouseMove: () => setToggle(false),\n    onClick: async ({\n      target\n    }) => {\n      setToggle(false);\n      const term = toggle ? '' : target.value;\n      const {\n        drinks\n      } = await drinksAPI(term, 'c');\n      setDrinksData(drinks);\n      setToggle(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, strCategory)));\n}\n\nexport default Category;","map":{"version":3,"sources":["/home/marcelotryber/projetos/projeto-bloco_19_app-receitas/sd-07-project-recipes-app/src/components/Category.jsx"],"names":["React","useEffect","useHistory","mealsAPI","drinksAPI","Category","history","fetchCategory","category","showSearch","bools","meals","setMealsData","mealsCategory","slice","zero","cinco","map","strCategory","index","setToggle","target","term","toggle","value","drinks","setDrinksData","drinksCategory"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { mealsAPI, drinksAPI } from '../services';\n\nfunction Category() {\n  const history = useHistory();\n\n  useEffect(() => {\n    fetchCategory();\n  }, []);\n\n  if (category[1] === 'comidas') {\n    return (\n      <div className=\"div-category\">\n        <button\n          type=\"button\"\n          data-testid=\"All-category-filter\"\n          hidden={ showSearch ? bools : false }\n          onClick={ async () => {\n            const { meals } = await mealsAPI('', '');\n            setMealsData(meals);\n          } }\n        >\n          All\n        </button>\n        {mealsCategory && mealsCategory\n          .slice(zero, cinco)\n          .map(({ strCategory }, index) => (\n            <button\n              type=\"button\"\n              key={ index }\n              data-testid={ `${strCategory}-category-filter` }\n              hidden={ showSearch ? bools : false }\n              value={ strCategory }\n              onMouseMove={ () => setToggle(false) }\n              onClick={ async ({ target }) => {\n                setToggle(false);\n                const term = toggle ? '' : target.value;\n                const { meals } = await mealsAPI(term, 'c');\n                setMealsData(meals);\n                setToggle(true);\n              } }\n            >\n              { strCategory}\n            </button>\n          ))}\n      </div>\n    );\n  }\n  return (\n    <div className=\"div-category\">\n      <button\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        hidden={ showSearch ? bools : false }\n        onClick={ async () => {\n          const { drinks } = await drinksAPI('', '');\n          setDrinksData(drinks);\n        } }\n      >\n        All\n      </button>\n      {drinksCategory && drinksCategory\n        .slice(zero, cinco)\n        .map(({ strCategory }, index) => (\n          <button\n            type=\"button\"\n            key={ index }\n            data-testid={ `${strCategory}-category-filter` }\n            hidden={ showSearch ? bools : false }\n            value={ strCategory }\n            onMouseMove={ () => setToggle(false) }\n            onClick={ async ({ target }) => {\n              setToggle(false);\n              const term = toggle ? '' : target.value;\n              const { drinks } = await drinksAPI(term, 'c');\n              setDrinksData(drinks);\n              setToggle(true);\n            } }\n          >\n            { strCategory}\n          </button>\n        ))}\n    </div>\n  );\n}\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}